/******************************************************************************
 *	 Copyright 2024 NVIDIA Corporation. All rights reserved.	 *
 ******************************************************************************

Permission is hereby granted by NVIDIA Corporation ("NVIDIA"), free of charge,
to any person obtaining a copy of the sample definition code that uses our
Material Definition Language (the "MDL Materials"), to reproduce and distribute
the MDL Materials, including without limitation the rights to use, copy, merge,
publish, distribute, and sell modified and unmodified copies of the MDL
Materials, and to permit persons to whom the MDL Materials is furnished to do
so, in all cases solely for use with NVIDIA's Material Definition Language,
subject to the following further conditions:

1. The above copyright notices, this list of conditions, and the disclaimer
that follows shall be retained in all copies of one or more of the MDL
Materials, including in any software with which the MDL Materials are bundled,
redistributed, and/or sold, and included either as stand-alone text files,
human-readable headers or in the appropriate machine-readable metadata fields
within text or binary files as long as those fields can be easily viewed by the
user, as applicable.
2. The name of NVIDIA shall not be used to promote, endorse or advertise any
Modified Version without specific prior written permission, except a) to comply
 with the notice requirements otherwise contained herein; or b) to acknowledge
the contribution(s) of NVIDIA.

THE MDL MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT,
TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE FOR
ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL,
INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE
THE MDL MATERIALS OR FROM OTHER DEALINGS IN THE MDL MATERIALS.
*/


mdl 1.5;

import ::anno::*;
import ::base::*;
import ::df::*;
import ::math::*;
import ::state::*;
import ::tex::*;
import ::nvidia::core_definitions::blend_colors;
import ::nvidia::core_definitions::dimension;


const string COPYRIGHT =
" Copyright 2024 NVIDIA Corporation. All rights reserved.\n"
" MDL MATERIALS ARE PROVIDED PURSUANT TO AN END USER LICENSE  AGREEMENT,\n"
" WHICH WAS ACCEPTED IN ORDER TO GAIN ACCESS TO THIS FILE.  IN PARTICULAR,\n"
" THE MDL MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\n"
" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF\n"
" COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL NVIDIA\n"
" CORPORATION BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY\n"
" GENERAL, SPECIAL,  INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN\n"
" AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR\n"
" INABILITY TO USE THE MDL MATERIALS OR FROM OTHER DEALINGS IN THE MDL MATERIALS.\n";

const string DESCRIPTION = "A woven fabric material.";

annotation preview_scale( float f);


float histogram_range(float input, float range = 1.0f, float position = 0.5f)
{
	float low = ::math::clamp(1.0 - ::math::min(((1.0 - position) + range * 0.5), (1.0 - position) * 2), 0.0, 1.0);
	float high = ::math::clamp(::math::min((position + range * 0.5 ), position * 2.0), 0.0, 1.0);
	return ::math::lerp(low, high, input);
}


float remap_xy_to_0_1(float input, float x, float y)
{
	return (input - x)/(y - x);
}

float histogram_scan_big(float input, float width, float position)
{
	return ::math::clamp(
				remap_xy_to_0_1(input,
					::math::lerp(-width, 1.0, position),
					::math::lerp(0.0, 1.0 + width, position)),
				0.0,
				1.0);
}


::base::texture_coordinate_info transform_coordinate_2(
	float4x4 transform
		[[ ::anno::description("A transformation to be applied to the source coordinates. rotation_translation_scale() is a suggested means to compute the transformation matrix.") ]],
	::base::texture_coordinate_info coordinate = ::base::texture_coordinate_info()
		[[ ::anno::description("Coordinate, typically sourced from coordinate_source or coordinate_projection.") ]]
) [[
	::anno::description("Transform a texture coordinate by a matrix.") ,
	::anno::noinline()
  ]]
{

	/*
	// Version 1
	float4 r_position = float4(coordinate.position.x,coordinate.position.y,coordinate.position.z,1)* transform;
	float4 r_tangent_u = float4(coordinate.tangent_u.x,coordinate.tangent_u.y,coordinate.tangent_u.z,1)* transform;
	float4 r_tangent_v = float4(coordinate.tangent_v.x,coordinate.tangent_v.y,coordinate.tangent_v.z,1)* transform;
	return ::base::texture_coordinate_info(
		float3(r_position.x,r_position.y,r_position.z),
		float3(r_tangent_u.x,r_tangent_u.y,r_tangent_u.z), // orthogonalization
		float3(r_tangent_v.x,r_tangent_v.y,r_tangent_v.z));// orthogonalization
	*/

	// Version 2
	float4 r_position = transform * float4(coordinate.position.x,coordinate.position.y,coordinate.position.z,1);
	//Try aproximating it for the case that the rotation is only aroud z and assuming the texture layout is nice and z is ~constant.
	//just pretend there is no other rotation happening
	//get rid of scaling and translation. Then extract fields where sin and cos would be in a simple 2d transform around z.
	float4 u = transform[0];
	float3 ru = ::math::normalize(float3(u.x,u.y,u.z));
	float cos =  ru.x;
	float sin =  -ru.y;
	//TODO: at least also handle sign of z?
	//TODO: handle tangent becoming 0


	return ::base::texture_coordinate_info(
		float3(r_position.x,r_position.y,r_position.z),
		::math::normalize(cos * coordinate.tangent_u - sin * coordinate.tangent_v),
		::math::normalize(cos * coordinate.tangent_v + sin * coordinate.tangent_u));
}


::base::texture_coordinate_info vmat_transform(
								float2 translation = float2(0.0, 0.0),
								float rotation	 = 0.0,				// rotation in degrees
								float2 scaling	 = float2(1.0, 1.0),
								uniform ::base::texture_coordinate_system system = ::base::texture_coordinate_uvw,
								uniform int uv_space	   = 0
)
{
	float rotation_rad = (rotation * 3.1415926535897932384626433832f) / 180.f;
	float4x4 scale =
	float4x4(1.0 /scaling.x, 0.			 ,  0. ,	 0.,
			 0.			, 1.0 /scaling.y ,  0. ,	 0.,
			 0.			, 0.			 ,  1.0,	 0.,
			 translation.x , translation.y  ,  0.0,	 1.);

	float s = ::math::sin(rotation_rad);
	float c = ::math::cos(rotation_rad);
	float4x4 rotate =
	float4x4(  c  ,  -s   , 0.0 , 0.0,
			   s  ,   c   , 0.0 , 0.0,
			   0.0,   0.0 , 1.0 , 0.0,
			   0. ,   0.0 , 0.0 , 1.);

	return transform_coordinate_2(scale*rotate, ::base::coordinate_source(system, uv_space));
}




export material Fabric_Cotton_Pique_Weave(
	color fabric_tint = color(0.829883f, 0.443634f, 0.153424f) [[
		::anno::description("Tints the fabric."),
		::anno::display_name("Fabric_Tint"),
		::anno::in_group("Appearance")
	]],
	float roughness = 0.5f [[
		::anno::description("Higher roughness values lead to bigger highlights and blurrier reflections."),
		::anno::display_name("Roughness"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f)
	]],
	float weave_airyness = 0.85f [[
		::anno::description("Specifies the density of the woven material. An airier weave makes light shine through the fabric."),
		::anno::display_name("Weave Airyness"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f)
	]],
	uniform float bump_strength = 1.f [[
		::anno::description("Determines the degree of bumpiness."),
		::anno::display_name("Bump Strength"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 3.f)
	]],
	float2 texture_translate = float2(0.f) [[
		::anno::description("Controls the position of the texture."),
		::anno::display_name("Texture Translate"),
		::anno::in_group("Transform")
	]],
	float texture_rotate = 0.f [[
		::anno::description("Rotates angle of the texture in degrees."),
		::anno::display_name("Texture Rotate"),
		::anno::in_group("Transform")
	]],
	float2 texture_scale = float2(1.0f) [[
		::anno::description("Larger numbers increase the size."),
		::anno::display_name("Texture Scale"),
		::nvidia::core_definitions::dimension(float2(1.00f, 1.00f)),
		::preview_scale(5.f),
		::anno::in_group("Transform")
	]],
	uniform bool round_corners = false [[
		::anno::description("Enables the round corner effect. Comes at a slight performance cost as additional raytracing calls are required to evaluate the round corner effect."),
		::anno::display_name("Round Corners"),
		::anno::in_group("Round Corners")
	]],
	uniform float radius = 1.5f [[
		::anno::description("Radius of the rounded corners."),
		::anno::display_name("Radius mm"),
		::anno::in_group("Round Corners"),
		::anno::soft_range(0.f, 10.f)
	]],
	uniform bool across_materials = true [[
		::anno::description("Applies the round corner effect across different materials when enabled."),
		::anno::display_name("Across Materials"),
		::anno::in_group("Round Corners")
	]],
	uniform int uv_space_index = 0 [[
		::anno::description("Use selected UV space for material."),
		::anno::display_name("UV Space Index"),
		::anno::in_group("Advanced")
	]]
)
[[
	::anno::display_name("Cotton Pique Weave - Marigold"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "orange", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 =
	let {
		bool tmp0 = false;
		float2 texture_rescale = texture_scale * 0.11f;  // texture covers 11 cm, scale up so it covers 1m per default
		
		material_surface tmp1(::df::custom_curve_layer(0.0399999991f, 1.f, 5.f, histogram_scan_big(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[1], 0.5f, 0.647476017f), ::df::microfacet_ggx_smith_bsdf(histogram_range(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[0], 1.f, ::math::lerp(0.479999989f, 0.899999976f, roughness)) * histogram_range(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[0], 1.f, ::math::lerp(0.479999989f, 0.899999976f, roughness)), histogram_range(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[0], 1.f, ::math::lerp(0.479999989f, 0.899999976f, roughness)) * histogram_range(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[0], 1.f, ::math::lerp(0.479999989f, 0.899999976f, roughness)), color(1.f, 1.f, 1.f), ::state::texture_tangent_u(0), ::df::scatter_reflect), ::df::weighted_layer(histogram_scan_big(1.f - float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[1], 0.531000018f, 0.349999994f), ::df::diffuse_transmission_bsdf(nvidia::core_definitions::blend_colors(nvidia::core_definitions::blend_colors(::base::file_texture(texture_2d("./textures/pique_weave_diff.jpg", ::tex::gamma_srgb), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint, color(::math::pow(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[1], 4.4000001f)), ::base::color_layer_multiply, 0.f).tint, fabric_tint, ::base::color_layer_overlay, 1.f).tint), ::df::weighted_layer(1.f, ::df::diffuse_reflection_bsdf(nvidia::core_definitions::blend_colors(nvidia::core_definitions::blend_colors(::base::file_texture(texture_2d("./textures/pique_weave_diff.jpg", ::tex::gamma_srgb), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint, color(::math::pow(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[1], 4.4000001f)), ::base::color_layer_multiply, 0.f).tint, fabric_tint, ::base::color_layer_overlay, 1.f).tint, 0.f), bsdf(), ::base::tangent_space_normal_texture(texture_2d("./textures/pique_weave_norm.jpg", ::tex::gamma_linear), bump_strength, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 1.f, 0.f)), ::base::tangent_space_normal_texture(texture_2d("./textures/pique_weave_norm.jpg", ::tex::gamma_linear), bump_strength, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 1.f, 0.f)), ::base::tangent_space_normal_texture(texture_2d("./textures/pique_weave_norm.jpg", ::tex::gamma_linear), bump_strength, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 1.f, 0.f)), material_emission(emission: edf(), intensity: color(0.f, 0.f, 0.f), mode: intensity_radiant_exitance));
		material_surface tmp2 = material_surface(scattering: bsdf(), emission: material_emission(emission: edf(), intensity: color(0.f, 0.f, 0.f), mode: intensity_radiant_exitance));
		color tmp3 = color(1.f, 1.f, 1.f);
		material_volume tmp4 = material_volume(scattering: vdf(), absorption_coefficient: color(0.f, 0.f, 0.f), scattering_coefficient: color(0.f, 0.f, 0.f));
		material_geometry tmp5(float3(0.f), histogram_scan_big(float3(::base::file_texture(texture_2d("./textures/pique_weave_multi_R_rough_G_ao_B_height.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false).tint)[2], 0.493000031f, ::math::lerp(0.200000003f, 0.409999996f, weave_airyness)), round_corners ? ::state::rounded_corner_normal(radius * 0.00100000005f, across_materials, 1.f) : ::state::normal());
	} in
		material(
			thin_walled: tmp0,
			surface: tmp1,
			backface: tmp2,
			ior: tmp3,
			volume: tmp4,
			geometry: tmp5);

// 2
export material Fabric_Cotton_Pique_Weave_Carulean(*)
[[
	::anno::display_name("Cotton Pique Weave - Carulean"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Carulean.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "blue", "cool")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.360016f, 0.459865f, 0.596528f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate:	float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 3
export material Fabric_Cotton_Pique_Weave_Rust(*)
[[
	::anno::display_name("Cotton Pique Weave - Rust"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Rust.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "rust", "orange", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.463972f, 0.186721f, 0.125669),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);


// 4
export material Fabric_Cotton_Pique_Weave_Yellow(*)
[[
	::anno::display_name("Cotton Pique Weave - Yellow"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Yellow.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "yellow", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.768958f, 0.664642f, 0.144562f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate:	float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 5
export material Fabric_Cotton_Pique_Weave_French_Blue(*)
[[
	::anno::display_name("Cotton Pique Weave - French Blue"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_French_Blue.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "blue", "cool")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.463972f, 0.186721f, 0.125669),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate:	float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 6
export material Fabric_Cotton_Pique_Weave_Green_Ash(*)
[[
	::anno::display_name("Cotton Pique Weave - Green Ash"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Green_Ash.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "pastel", "green")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.385591f, 0.644771f, 0.439627f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate:	float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 7
export material Fabric_Cotton_Pique_Weave_Burnt_Coral(*)
[[
	::anno::display_name("Cotton Pique Weave - Burnt Coral"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Burnt_Coral.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "coral", "pink", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.731504f, 0.315048f, 0.288993f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate:	float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 8
export material Fabric_Cotton_Pique_Weave_Mint(*)
[[
	::anno::display_name("Cotton Pique Weave - Mint"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Mint.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "mint", "green")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.027755f, 0.451710f, 0.258142f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 9
export material Fabric_Cotton_Pique_Weave_Amethyst(*)
[[
	::anno::display_name("Cotton Pique Weave - Amethyst"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Amethyst.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.342333f, 0.212702f, 0.419884f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 10
export material Fabric_Cotton_Pique_Weave_Raspberry(*)
[[
	::anno::display_name("Cotton Pique Weave - Raspberry"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Raspberry.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "raspberry", "red", "pink", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.577802f, 0.138104f, 0.252200f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 11
export material Fabric_Cotton_Pique_Weave_Inkwell(*)
[[
	::anno::display_name("Cotton Pique Weave - Inkwell"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Inkwell.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.123658f, 0.133888f, 0.155684f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 12
export material Fabric_Cotton_Pique_Weave_Gray(*)
[[
	::anno::display_name("Cotton Pique Weave - Ultimate Gray"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Gray.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "gray", "neutral")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.352885f, 0.363611f, 0.370860f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 13
export material Fabric_Cotton_Pique_Weave_Buttercream(*)
[[
	::anno::display_name("Cotton Pique Weave - Buttercream"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Buttercream.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "pastel", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.463972f, 0.186721f, 0.125669),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

// 14
export material Fabric_Cotton_Pique_Weave_Desert_Mist(*)
[[
	::anno::display_name("Cotton Pique Weave - Desert Mist"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Fabric_Cotton_Pique_Weave.Fabric_Cotton_Pique_Weave_Desert_Mist.png"),
	::anno::key_words(string[]("fabric", "woven", "rough", "thin", "new", "desert", "sand", "orange", "warm")),
	::anno::author("NVIDIA vMaterials")
]]
 = Fabric_Cotton_Pique_Weave
(
	fabric_tint:		color(0.669661f, 0.472246f, 0.308419f),
	roughness:			0.5f,
	weave_airyness:		0.9f,
	bump_strength:		1.0f,
	texture_translate: float2(0.0f),
	texture_rotate:		0.0f,
	texture_scale:		float2(1.0f),
	round_corners:		false,
	radius:				1.5f,
	across_materials:	false,
	uv_space_index:		0
);

